// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ActivityFeed ScrollableFeed component renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#F7F7F7",
      "flex": 1,
      "height": 1334,
      "zIndex": 2,
    }
  }
>
  <ReactNativeModal
    animationIn="slideInUp"
    animationInTiming={300}
    animationOut="slideOutDown"
    animationOutTiming={300}
    avoidKeyboard={false}
    backdropColor="black"
    backdropOpacity={0.7}
    backdropTransitionInTiming={300}
    backdropTransitionOutTiming={300}
    coverScreen={true}
    customBackdrop={null}
    deviceHeight={null}
    deviceWidth={null}
    hasBackdrop={true}
    hideModalContentWhileAnimating={false}
    isVisible={false}
    onBackButtonPress={[Function]}
    onBackdropPress={[Function]}
    onModalHide={[Function]}
    onModalShow={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    propagateSwipe={false}
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
    useNativeDriver={false}
  >
    <View
      style={
        Object {
          "alignSelf": "center",
          "justifyContent": "center",
          "position": "absolute",
        }
      }
    >
      <CategoryFilterCard
        activityChange={[Function]}
        applyChange={[Function]}
        selected={Array []}
      />
    </View>
  </ReactNativeModal>
  <View
    style={
      Object {
        "flex": 693,
        "zIndex": 0,
      }
    }
  >
    <ForwardRef(AnimatedComponentWrapper)
      contentContainerStyle={
        Object {
          "paddingTop": 150.24869791666666,
        }
      }
      data={
        Array [
          Object {
            "id": "10001",
            "title": "scrollablefeed",
          },
        ]
      }
      keyExtractor={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={1}
      showsVerticalScrollIndicator={false}
    />
    <ForwardRef(AnimatedComponentWrapper)
      style={
        Array [
          Object {
            "backgroundColor": "white",
            "borderBottomColor": "#E6ECED",
            "borderBottomWidth": 1,
            "height": 150.24869791666666,
            "justifyContent": "center",
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 1,
          },
          Object {
            "transform": Array [
              Object {
                "translateY": 0,
              },
            ],
          },
        ]
      }
    >
      <Image
        source={
          Object {
            "default": "",
          }
        }
        style={
          Object {
            "height": 86.84895833333334,
            "left": 25,
            "top": 28.66015625,
            "width": 326,
          }
        }
      />
      <View
        style={
          Object {
            "position": "absolute",
            "right": 50,
            "top": 86.84895833333334,
          }
        }
      >
        <ForwardRef
          onPress={[Function]}
        >
          <Image
            source={
              Object {
                "default": "",
              }
            }
            style={
              Object {
                "height": 30,
                "width": 40,
              }
            }
          />
        </ForwardRef>
      </View>
    </ForwardRef(AnimatedComponentWrapper)>
  </View>
  <View
    style={
      Object {
        "flex": 75,
      }
    }
  >
    <BottomNav
      activity={false}
      activityonPress={[Function]}
      chats={false}
      chatsonPress={[Function]}
      newsfeed={true}
      newsfeedonPress={[Function]}
      profile={false}
      profileonPress={[Function]}
      search={false}
      searchonPress={[Function]}
    />
  </View>
</View>
`;
